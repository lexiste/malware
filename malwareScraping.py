#!/usr/bin/env python3

##
## concept from @kindredsec
## https://www.youtube.com/watch?v=y5OObEOWuDY&feature=youtu.be
##

import re
import requests
import json
import time
import datetime
import logging
import signal
import wget

## these are the various patterns we want to watch for
KEY_STRINGS = {'posh':'powershell',
                'posh_script':'Invoke-',
                'posh_webclient':'Net.WebClient',
                'powershell':'powershell.exe',
                'base64_pe1':'TVqQA',
                'base64_pe2':'TVpQ',
                'base64_gz1':'H4sI',
                'py_syscall':'os.system',
                'bash':'#!/bin/bash',
                'vba_open':'Auto_Open()',
                'vbs_shell':'wscript.shell',
                'elf64':'f0VMR',
                'ssh-conn':'ssh '
                }

previousScrape = []
## Logging Setup
logging.basicConfig(filename='malwareScraping.log',level=logging.INFO,format='%(asctime)s %(levelname)-8s %(message)s',datefmt='%Y-%m-%d %H:%M:%S%p')

## functions ...
def infoLogging(strOut):
    stamp = str(datetime.datetime.now()).split(".")[0]
    logging.info("{0}".format(strOut))

def signal_handler(signal, frame):
    infoLogging("\nprogram exiting cleanly")
    raise SystemExit(0)
    signal.signal(signal.SIGINT, signal_handler)

def processFile(key, type):
    dlURL = "https://pastebin.com/raw/" + key
##    #dlFile = "{0}-{1}.txt".format(key, type) # [key]-[type].txt EG: yPNZEYZt-bash.txt
    try:
##        #print("[dbg] fetching url: {0} of {1} from {2} into {3}\n".format(key, type, dlURL, dlFileq))
##        #infoLogging("[pF()] downloading file {0} of {1} from {2} saved to {3}".format(key, type, dlURL, dlFile))
##        #wget.download(dlURL, dlFile) # download the file into a long file name of [key]-[type].txt, for some reason this results in some files named `[key]-[type] (#).txt`

        infoLogging("[*-*] downloading file {0} of type {1} from {2}".format(key, type, dlURL))
        wget.download(dlURL) # just download the file into the 8-char name

    except Exception as e:
        print("Error in processFile(): {0}".format(e))

## program logic
while True:
    parsedKeys = []
    newScrapes = []

    now = str(datetime.datetime.now()).split(".")[0]
    infoLogging("(re)starting loop for new keys")
    
    ### Read in last N posts and get the key and put in array
    post_limit = '100' ## max number of records we can request is 250, default value is 50
    last_n_posts = requests.get('https://scrape.pastebin.com/api_scraping.php?limit=' + post_limit).text
    json_posts = json.loads(last_n_posts)

    for post in json_posts:
        if post['key'] not in previousScrape:
            raw_post_text = requests.get('https://scrape.pastebin.com/api_scrape_item.php?i='+ post['key'])
            for filetype, fingerprint in KEY_STRINGS.items():
                if fingerprint in raw_post_text.text and post['key'] not in parsedKeys:
                    now = str(datetime.datetime.now()).split(".")[0]
                    infoLogging("[+] potential file identified of type {0}, calling download process...".format(filetype))
                    processFile(post['key'], filetype)  ## find the pastebin ID and the type of file from the
                    parsedKeys.append(post['key'])

            newScrapes.append(post['key'])
##            #print(*newScrapes, sep=";") # print latest 100 processed keys

        previousScrape = newScrapes
        time.sleep(15)
